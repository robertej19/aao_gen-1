#!/bin/bash
#
#SBATCH --account=clas12
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --mem-per-cpu=2500
#SBATCH --job-name=aao_(no)rad_generator_0.job
#SBATCH --time=24:00:00
#SBATCH --gres=disk:10000
#SBATCH --output=/volatile/clas12/robertej/0.out
#SBATCH --error=/volatile/clas12/robertej/0.err
#SBATCH --chdir=/scratch/robertej/
#

# Sleep a random amount of time from 0-180s
# This avoids conflicts when lots of jobs start simultaneously.
TSLEEP=$[ ( $RANDOM % (180+1) ) ]s
echo "Sleeping for ${TSLEEP} ..."
sleep $TSLEEP
mkdir -p aao_gen/build
mkdir -p gen_wrapper/src
cp /mnt/c/Users/rober/Dropbox/Bobby/Linux/work/CLAS12/mit-clas12-analysis/theana/paragon/aao_gen/gen_wrapper/batch_farm_executables/src/aao_input_file_maker.py gen_wrapper/src/
cp /mnt/c/Users/rober/Dropbox/Bobby/Linux/work/CLAS12/mit-clas12-analysis/theana/paragon/aao_gen/aao_norad/build/aao_norad.exe aao_gen/build/aao_generator.exe
cp /mnt/c/Users/rober/Dropbox/Bobby/Linux/work/CLAS12/mit-clas12-analysis/theana/paragon/aao_gen/gen_wrapper/batch_farm_executables/src/lund_filter.py gen_wrapper/src/lund_filter.py
cp /mnt/c/Users/rober/Dropbox/Bobby/Linux/work/CLAS12/mit-clas12-analysis/theana/paragon/aao_gen/gen_wrapper/batch_farm_executables/src/aao_gen.py gen_wrapper/src/
cp /mnt/c/Users/rober/Dropbox/Bobby/Linux/work/CLAS12/mit-clas12-analysis/theana/paragon/aao_gen/gen_wrapper/batch_farm_executables/src/default_generator_args.json .
chmod +x gen_wrapper/src/*
chmod +x aao_gen/build/*


./gen_wrapper/src/aao_gen.py --generator_type norad --input_filename_rad aao_rad_input.inp --input_filename_norad aao_norad_input.inp --flag_ehel 1 --ebeam 10.604 --q2min 0.9 --q2max 14 --epmin 0.15 --epmax 10.604 --fmcall 1.0 --boso 1 --seed 0 --trig 8000 --epirea 1 --physics_model_rad 5 --int_region ".20 .12 .20 .20" --npart_rad 4 --sigr_max_mult 0.0 --sigr_max 0.005 --model_5_min_W 3.5721 --rad_emin 0.005 --err_max 0.2 --target_len 5 --target_rad 0.43 --cord_x 0.0 --cord_y 0.0 --cord_z 0.0 --physics_model_norad 5 --npart_norad 3 --input_exe_path gen_wrapper/src/aao_input_file_maker.py --precision 5 --maxloops 10 --generator_exe_path aao_gen/build/aao_generator.exe --xBmin -1 --xBmax 10 --w2min -1 --w2max 100 --tmin -1 --tmax 100 --filter_infile aao_norad.lund --filter_outfile aao_gen.dat --filter_exe_path gen_wrapper/src/lund_filter.py --outdir /mnt/c/Users/rober/Dropbox/Bobby/Linux/work/CLAS12/mit-clas12-analysis/theana/paragon/aao_gen/output/ 

mv aao_gen_filtered.dat /volatile/clas12/robertej/pi0_gen0.lund
